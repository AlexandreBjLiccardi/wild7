<WildObject ident = "real.WildDataSet" author = "alexandre.liccardi@onema.fr" inherits = "WildClass">
Jeu de données &quot;virtuel&quot;. Traitement par HashMap, plutôt réservé aux &quot;petits volumes&quot;.
<Dependency value = "java.util.HashMap" description = "" />
<Dependency value = "java.util.List" description = "" />
<Dependency value = "java.util.ArrayList" description = "" />
<Field ident = "headerNames" type = "HashMap&lt;Integer,String&gt;" description = "headerNames (HashMap&lt;Integer,String&gt;)" />
<Invokation>
<Parameter ident = "mapContents" type = "HashMap&lt;Integer,HashMap&lt;String,Object&gt;&gt;" description = "Contenu à affecter d&apos;office" />
</Invokation>
<WildMethod ident = "add" author ="alexandre.liccardi@onema.fr" update ="Fri Apr 22 00:00:00 CEST 2016" description = "Ajout d&apos;un enregistrement.">
<Invokation>
<Parameter ident = "enrContents" type = "HashMap&lt;String,Object&gt;" description = "Nouvel enregistrement, sous forme de Map" />
</Invokation>
<Step ident = "1" weight = "10" description = "Cast du paramètre"/>
<Step ident = "2" weight = "10" description = "Ajout du paramètre"/>
</WildMethod>
<WildMethod ident = "addColumn" author ="alexandre.liccardi@onema.fr" update ="Fri Apr 22 00:00:00 CEST 2016" description = "Ajoute une colonne, contenant une valeur précise">
<Invokation>
<Parameter ident = "columnName" type = "String" description = "Nom de la colonne" />
<Parameter ident = "colContents" type = "HashMap&lt;Integer,Object&gt;" description = "Contenu de la colonne" />
</Invokation>
<Step ident = "1" weight = "20" description = "Cast du WildDataSet (+)"/>
<Step ident = "2" weight = "10" description = "Création des flux"/>
<Step ident = "3" weight = "50" description = "Ecriture du fichier (++)"/>
<Step ident = "4" weight = "10" description = "Contrôle des flux"/>
<Output ident = "addColumn_output1" type = "Integer" description = "Position de la colonne rajoutée (Integer)"/>
</WildMethod>
<WildMethod ident = "addColumnJoinBy" author ="alexandre.liccardi@onema.fr" update ="Fri Apr 22 00:00:00 CEST 2016" description = "Ajoute une colonne, à partir d&apos;une matrice, avec jointure sur un nom de colonne donné">
<Invokation>
<Parameter ident = "columnName" type = "String" description = "Nom de la colonne à ajouter" />
<Parameter ident = "columnCompare_dataset" type = "String" description = "Nom de la colonne comparée, dataset" />
<Parameter ident = "inputJoin" type = "HashMap&lt;Integer,Object&gt;" description = "Valeurs de comparaison" />
<Parameter ident = "colContents" type = "HashMap&lt;Integer,Object&gt;" description = "Contenu de la colonne" />
</Invokation>
<Step ident = "1" weight = "20" description = "Cast du WildDataSet (+)"/>
<Step ident = "2" weight = "10" description = "Création des flux"/>
<Step ident = "3" weight = "50" description = "Ecriture du fichier (++)"/>
<Step ident = "4" weight = "10" description = "Contrôle des flux"/>
<Output ident = "addColumnJoinBy_output1" type = "Integer" description = "Position de la colonne rajoutée (Integer)"/>
</WildMethod>
<WildMethod ident = "concatenate" author ="alexandre.liccardi@onema.fr" update ="Fri Apr 22 00:00:00 CEST 2016" description = "Concatène deux colonnes">
<Invokation>
<Parameter ident = "col_1" type = "String" description = "Nom de colonne devant" />
<Parameter ident = "col_2" type = "String" description = "Nom de colonne derrière" />
<Parameter ident = "link" type = "String" description = "Opérateur de liaison" />
</Invokation>
<Step ident = "1" weight = "10" description = "Création des flux"/>
<Step ident = "2" weight = "50" description = "Parcours du jeu de données avec réécriture (++)"/>
<Step ident = "3" weight = "10" description = "Contrôle des flux"/>
<Output ident = "concatenate_output1" type = "Integer" description = "Position de la colonne rajoutée (Integer)"/>
</WildMethod>
<WildMethod ident = "concatenateFilterBy" author ="alexandre.liccardi@onema.fr" update ="Fri Apr 22 00:00:00 CEST 2016" description = "Concatène deux colonnes, si les valeurs correspondent au filtre">
<Invokation>
<Parameter ident = "col_1" type = "String" description = "Nom de colonne devant" />
<Parameter ident = "col_2" type = "String" description = "Nom de colonne derrière" />
<Parameter ident = "link" type = "String" description = "Opérateur de liaison" />
<Parameter ident = "colContents" type = "HashMap&lt;String,Object&gt;" description = "Motif à reconnaître pour affectation (filtre)" />
</Invokation>
<Step ident = "1" weight = "10" description = "Création des flux"/>
<Step ident = "2" weight = "50" description = "Parcours du jeu de données avec sélection et réécriture (++)"/>
<Step ident = "3" weight = "10" description = "Contrôle des flux"/>
<Output ident = "concatenateFilterBy_output1" type = "Integer" description = "Position de la colonne rajoutée (Integer)"/>
</WildMethod>
<WildMethod ident = "drop" author ="alexandre.liccardi@onema.fr" update ="Fri Apr 22 00:00:00 CEST 2016" description = "Suppression d&apos;un enregistrement.(WildDataSet)">
<Invokation>
<Parameter ident = "filter" type = "HashMap&lt;String,Object&gt;" description = "Motif à reconnaître pour suppression (filtre)" />
</Invokation>
<Step ident = "1" weight = "10" description = "Sélection de l&apos;enregistrement"/>
<Step ident = "2" weight = "10" description = "Suppression de l&apos;entrée"/>
</WildMethod>
<WildMethod ident = "dropColumn" author ="alexandre.liccardi@onema.fr" update ="Fri Apr 22 00:00:00 CEST 2016" description = "Supprime une colonne">
<Invokation>
<Parameter ident = "columnName" type = "String" description = "Nom de la colonne" />
</Invokation>
<Step ident = "1" weight = "20" description = "Cast du WildDataSet (+)"/>
<Step ident = "2" weight = "10" description = "Création des flux"/>
<Step ident = "3" weight = "50" description = "Ecriture du fichier (++)"/>
<Step ident = "4" weight = "10" description = "Contrôle des flux"/>
<Output ident = "dropColumn_output1" type = "Integer" description = "Position de la colonne supprimée (Integer)"/>
</WildMethod>
<WildMethod ident = "dropFilter" author ="alexandre.liccardi@onema.fr" update ="Fri Apr 22 00:00:00 CEST 2016" description = "Suppression des enregistrements répondant à une condition.">
<Invokation>
<Parameter ident = "filter" type = "HashMap&lt;String,Object&gt;" description = "Motif à reconnaître pour suppression (filtre)" />
</Invokation>
<Invokation>
<Parameter ident = "modeFilter" type = "String" description = "Mode d&apos;exécution, &quot;dropIfContains&quot;, &quot;dropIfNotContains&quot;" />
<Parameter ident = "searchValue" type = "String" description = "Valeur cherchée" />
<Parameter ident = "targetedColumns" type = "List&lt;String&gt;" description = "Colonnes dans lesquelles s&apos;effectue la recherche" />
</Invokation>
<Step ident = "1" weight = "10" description = "Sélection des enregistrements"/>
<Step ident = "2" weight = "10" description = "Suppression des entrées"/>
<Output ident = "dropFilter_output1" type = "Integer" description = "Nombre d&apos;enregistrements supprimés (Integer)"/>
</WildMethod>
<WildMethod ident = "flatten" author ="alexandre.liccardi@onema.fr" update ="Fri Apr 22 00:00:00 CEST 2016" description = "&quot;Aplatit&quot; le fichier vers un format texte séparateur">
<Step ident = "1" weight = "10" description = "Composition du contenu"/>
<Return><Parameter ident = "flatten_ret" type = "String" description = "Contenu sous forme de &quot;String&quot; (String)"/></Return>
</WildMethod>
<WildMethod ident = "flattenToFile" author ="alexandre.liccardi@onema.fr" update ="Fri Apr 22 00:00:00 CEST 2016" description = "&quot;Aplatit&quot; le fichier vers un format texte séparateur, l&apos;enregistre dans un fichier de sortie">
<Invokation>
<Parameter ident = "fileName_OUT" type = "String" description = "Nom du fichier de sortie" />
<Parameter ident = "keepFile" type = "Boolean" default = "false" description = "Suppression du fichier initial" />
</Invokation>
<Step ident = "1" weight = "10" description = "Création des flux"/>
<Step ident = "2" weight = "50" description = "Parcours du jeu de données avec réécriture (++)"/>
<Step ident = "3" weight = "10" description = "Contrôle des flux"/>
<Output ident = "flattenToFile_output1" type = "String" description = "Adresse du fichier (String)"/>
<Return><Parameter ident = "flattenToFile_ret" type = "String" description = "Adresse du fichier (String)"/></Return>
</WildMethod>
<WildMethod ident = "replaceValue" author ="alexandre.liccardi@onema.fr" update ="Fri Apr 22 00:00:00 CEST 2016" description = "Remplace une valeur dans la totalité du fichier">
<Invokation>
<Parameter ident = "formerValue" type = "Object" description = "Valeur à remplacer" />
<Parameter ident = "newValue" type = "Object" description = "Valeur de remplacement" />
</Invokation>
<Step ident = "1" weight = "10" description = "Création des flux"/>
<Step ident = "2" weight = "50" description = "Parcours du jeu de données avec réécriture (++)"/>
<Step ident = "3" weight = "10" description = "Contrôle des flux"/>
<Output ident = "replaceValue_output1" type = "Integer" description = "Nombre de remplacements (Integer)"/>
</WildMethod>
<WildMethod ident = "replaceValueFilterBy" author ="alexandre.liccardi@onema.fr" update ="Fri Apr 22 00:00:00 CEST 2016" description = "Remplace une valeur dans l&apos;emprise indiquée">
<Invokation>
<Parameter ident = "formerValue" type = "Object" description = "Valeur à remplacer" />
<Parameter ident = "newValue" type = "Object" description = "Valeur de remplacement" />
<Parameter ident = "enrContents" type = "HashMap&lt;String,Object&gt;" description = "Nouvel enregistrement, sous forme de Map" />
</Invokation>
<Step ident = "1" weight = "10" description = "Création des flux"/>
<Step ident = "2" weight = "50" description = "Parcours du jeu de données avec sélection et réécriture (++)"/>
<Step ident = "3" weight = "10" description = "Contrôle des flux"/>
<Output ident = "replaceValueFilterBy_output1" type = "Integer" description = "Nombre de remplacements (Integer)"/>
</WildMethod>
<WildMethod ident = "setData" author ="alexandre.liccardi@onema.fr" update ="Fri Apr 22 00:00:00 CEST 2016" description = "Ajoute les données à la liste du WildDataSet">
<Invokation>
<Parameter ident = "mapContents" type = "HashMap&lt;Integer,HashMap&lt;String,Object&gt;&gt;" description = "Contenu à affecter d&apos;office" />
</Invokation>
<Step ident = "1" weight = "10" description = "Affectation de la variable"/>
<Step ident = "2" weight = "10" description = "Elaboration des statistiques"/>
<Output ident = "setData_output1" type = "Integer[]" description = "Nombre d&apos;enregistrements, nombre de colonnes (Integer[])"/>
</WildMethod>
<WildMethod ident = "update" author ="alexandre.liccardi@onema.fr" update ="Fri Apr 22 00:00:00 CEST 2016" description = "Mise à jour d&apos;un enregistrement">
<Invokation>
<Parameter ident = "filtre" type = "HashMap&lt;String,Object&gt;" description = "Motif à reconnaître pour affection (filtre)" />
<Parameter ident = "newEnr" type = "HashMap&lt;String,Object&gt;" description = "Données à mettre à jour" />
</Invokation>
<Step ident = "1" weight = "10" description = "Sélection de l&apos;enregistrement"/>
<Step ident = "2" weight = "10" description = "Mise à jour de l&apos;entrée"/>
</WildMethod>
<WildMethod ident = "getColumn" author ="alexandre.liccardi@onema.fr" update ="Fri Apr 22 00:00:00 CEST 2016" description = "Récupération d&apos;une colonne, avec n*[numéro d&apos;enregistrement et la valeur voulue]">
<Invokation>
<Parameter ident = "getColumn" type = "String" description = "Nom de la colonne à récupérer" />
</Invokation>
<Step ident = "1" weight = "10" description = "Sélection de l&apos;enregistrement"/>
<Step ident = "2" weight = "10" description = "Mise à jour de l&apos;entrée"/>
<Return><Parameter ident = "getColumn_ret" type = "HashMap&lt;Integer,Object&gt;" description = "Couples indexés(HashMap&lt;Integer,Object&gt;)"/></Return>
</WildMethod>
<WildMethod ident = "setHeaders" author ="alexandre.liccardi@onema.fr" update ="Fri Apr 22 00:00:00 CEST 2016" description = "Actualisation des noms de colonnes">
<Invokation>
<Parameter ident = "newColumns" type = "String[]" description = "Nouveaux noms de colonne" />
</Invokation>
<Step ident = "1" weight = "10" description = "Mise à jour de la variable"/>
<Step ident = "2" weight = "10" description = "Mise à jour des enregistrements"/>
</WildMethod>

<WildMethod ident = "findEqual" author ="alexandre.liccardi@onema.fr" update ="Mon Jul 25 00:00:00 CEST 2016" description = "Récupération des numéros de lignes des enregistrements, correspondant à une égalité stricte, selon options de suppression des caractères non signifiants en début, en fin ou en milieux de caractères, sensible à la casse ou non, sensible au caractère spéciaux dont accents ou non.">
<Invokation>
<Parameter ident = "colName" type = "String" description = "Nom de la colonne" />
<Parameter ident = "colValue" type = "Object" description = "Valeur d&apos;objet de comparaison" />
<Parameter ident = "nullSens" type = "Boolean" default = "false" description = "Sensible aux valeurs vides" />
<Parameter ident = "caseSens" type = "Boolean" default = "false" description = "Sensible à la casse" />
<Parameter ident = "specSens" type = "Boolean" default = "false" description = "Sensible aux caractères spéciaux" />
</Invokation>
<Step ident = "1" weight = "20" description = "Parse du fichier (+)"/>
<Step ident = "2" weight = "100" description = "Vérification de la condition (+++)"/>
<Step ident = "3" weight = "20" description = "Construction du retour (+)"/>
<Step ident = "4" weight = "10" description = "Contrôle des flux"/>
<Return><Parameter ident = "findEqual_ret" type = "Integer[]" description = "Liste des lignes repérées (Integer[])"/></Return>
</WildMethod>
<WildMethod ident = "findContain" author ="alexandre.liccardi@onema.fr" update ="Mon Jul 25 00:00:00 CEST 2016" description = "Récupération des numéros de lignes des enregistrements, correspondant à une condition de contenu (la cible contient le terme recherché), selon options de suppression des caractères non signifiants en début, en fin ou en milieux de caractères, sensible à la casse ou non, sensible au caractère spéciaux dont accents ou non. Ne porte que sur les chaînes de caractère.">
<Invokation>
<Parameter ident = "colName" type = "String" description = "Nom de la colonne" />
<Parameter ident = "colValue" type = "Object" description = "Valeur d&apos;objet de comparaison" />
<Parameter ident = "nullSens" type = "Boolean" default = "false" description = "Sensible aux valeurs vides" />
<Parameter ident = "caseSens" type = "Boolean" default = "false" description = "Sensible à la casse" />
<Parameter ident = "specSens" type = "Boolean" default = "false" description = "Sensible aux caractères spéciaux" />
</Invokation>
<Step ident = "1" weight = "20" description = "Parse du fichier (+)"/>
<Step ident = "2" weight = "100" description = "Vérification de la condition (+++)"/>
<Step ident = "3" weight = "20" description = "Construction du retour (+)"/>
<Step ident = "4" weight = "10" description = "Contrôle des flux"/>
<Return><Parameter ident = "findContain_ret" type = "Integer[]" description = "Liste des lignes repérées (Integer[])"/></Return>
</WildMethod>
<WildMethod ident = "findRegex" author ="alexandre.liccardi@onema.fr" update ="Mon Jul 25 00:00:00 CEST 2016" description = "Récupération des numéros de lignes des enregistrements, correspondant à un terme recherché (la cible répond à une expression régulière comportant le terme recherché).">
<Invokation>
<Parameter ident = "colName" type = "String" description = "Nom de la colonne" />
<Parameter ident = "colRegexp" type = "String" description = "Expression régulière testée" />
<Parameter ident = "nullSens" type = "Boolean" default = "false" description = "Sensible aux valeurs vides" />
<Parameter ident = "caseSens" type = "Boolean" default = "false" description = "Sensible à la casse" />
<Parameter ident = "specSens" type = "Boolean" default = "false" description = "Sensible aux caractères spéciaux" />
</Invokation>
<Step ident = "1" weight = "20" description = "Parse du fichier (+)"/>
<Step ident = "2" weight = "100" description = "Vérification de la condition (+++)"/>
<Step ident = "3" weight = "20" description = "Construction du retour (+)"/>
<Step ident = "4" weight = "10" description = "Contrôle des flux"/>
<Return><Parameter ident = "findRegex_ret" type = "Integer[]" description = "Liste des lignes repérées (Integer[])"/></Return>
</WildMethod>
<WildMethod ident = "findWithin" author ="alexandre.liccardi@onema.fr" update ="Mon Jul 25 00:00:00 CEST 2016" description = "Récupération des numéros de lignes des enregistrements, dont une valeur précise est contenue entre deux bornes (incluses). Pour les champs de type chaîne de caractères, l’ordre alphabétique est retenu (sensible à la casse, pas de suppression des caractères non signifiants). Une valeur # vide # signifie une absence de borne.">
<Invokation>
<Parameter ident = "colName" type = "String" description = "Nom de la colonne" />
<Parameter ident = "minValue" type = "Object" description = "Valeur inférieure" />
<Parameter ident = "minExclude" type = "Boolean" default = "false" description = "Est exclu par le bas ?" />
<Parameter ident = "maxValue" type = "Object" description = "Valeur supérieure" />
<Parameter ident = "maxExclude" type = "Boolean" default = "false" description = "Est exclu par le haut ?" />
</Invokation>
<Step ident = "1" weight = "20" description = "Parse du fichier (+)"/>
<Step ident = "2" weight = "100" description = "Vérification de la condition (+++)"/>
<Step ident = "3" weight = "20" description = "Construction du retour (+)"/>
<Step ident = "4" weight = "10" description = "Contrôle des flux"/>
<Return><Parameter ident = "findWithin_ret" type = "Integer[]" description = "Liste des lignes repérées (Integer[])"/></Return>
</WildMethod>
<WildMethod ident = "findCompare" author ="alexandre.liccardi@onema.fr" update ="Mon Jul 25 00:00:00 CEST 2016" description = "Récupération des numéros de lignes des enregistrements, correspondant à une comparaison mathématique (opérateur de comparaison mathématique : supériorité / infériorité, égalité -  numérique ou date). Choix de l’exclusion ou de l’inclusion des bornes.">
<Invokation>
<Parameter ident = "colName" type = "String" description = "Nom de la colonne" />
<Parameter ident = "minValue" type = "Object" description = "Valeur inférieure" />
<Parameter ident = "minExclude" type = "Boolean" default = "false" description = "Est exclu par le bas ?" />
<Parameter ident = "maxValue" type = "Object" description = "Valeur supérieure" />
<Parameter ident = "maxExclude" type = "Boolean" default = "false" description = "Est exclu par le haut ?" />
</Invokation>
<Step ident = "1" weight = "20" description = "Parse du fichier (+)"/>
<Step ident = "2" weight = "100" description = "Vérification de la condition (+++)"/>
<Step ident = "3" weight = "20" description = "Construction du retour (+)"/>
<Step ident = "4" weight = "10" description = "Contrôle des flux"/>
<Return><Parameter ident = "findCompare_ret" type = "Integer[]" description = "Liste des lignes repérées (Integer[])"/></Return>
</WildMethod>
<WildMethod ident = "findLines" author ="alexandre.liccardi@onema.fr" update ="Mon Jul 25 00:00:00 CEST 2016" description = "Récupération des numéros de lignes des enregistrements, combinant l’ensemble des conditions précédemment listées. Une liste des indexations des conditions est fournie  en Tableau 1, et permet le stockage des conditions dans une table de paramètres.
Chacune des conditions répond soit à une condition OU, soit à une condition ET (opérateur de combinaison de condition), à l’exception de la première condition listée.
Chacune des conditions répond soit à une condition positive (on sélection les numéros de lignes répondant à la condition) soit négative (on exclut sélection les numéros de lignes répondant à la condition). Une condition négative est préfixée du caractère # ! #.">
<Invokation>
<Parameter ident = "conditionList" type = "Map&lt;Integer, Map&lt;String,Object&gt;&gt;" description = "liste des conditions" />
</Invokation>
<Step ident = "1" weight = "20" description = "Parse du fichier (+)"/>
<Step ident = "2" weight = "100" description = "Vérification de la condition (+++)"/>
<Step ident = "3" weight = "20" description = "Construction du retour (+)"/>
<Step ident = "4" weight = "10" description = "Contrôle des flux"/>
<Return><Parameter ident = "findLines_ret" type = "Integer[]" description = "Liste des lignes repérées (Integer[])"/></Return>
</WildMethod>
<WildMethod ident = "calculate" author ="alexandre.liccardi@onema.fr" update ="Mon Jul 25 00:00:00 CEST 2016" description = "Calcul de statistiques sur les valeurs des enregistrements, combinant l’ensemble des conditions précédemment listées. La liste des statistiques retenues est présentée en Tableau 1. Le Tableau 2 plus loin renvoie à un index des conditions pour implémentation.">
<Invokation>
<Parameter ident = "colName" type = "String" description = "Nom de la colonne de calcul" />
<Parameter ident = "conditionList" type = "Map&lt;Integer, Map&lt;String,Object&gt;&gt;" description = "Liste des conditions" />
<Parameter ident = "statKey" type = "String" description = "Nom de la statistique" />
<Parameter ident = "statParam" type = "Integer" default = "null" description = "Paramètre associé à la statistique" />
</Invokation>
<Step ident = "1" weight = "20" description = "Parse du fichier (+)"/>
<Step ident = "2" weight = "100" description = "Vérification de la condition (+++)"/>
<Step ident = "3" weight = "100" description = "Calcul de la statistique (+++)"/>
<Step ident = "4" weight = "20" description = "Construction du retour (+)"/>
<Step ident = "5" weight = "10" description = "Contrôle des flux"/>
<Return><Parameter ident = "calculate_ret" type = "Map&lt;String, Object&gt;" description = "Tableau de valeurs des résultats (Map&lt;String, Object&gt;)"/></Return>
</WildMethod>
<WildMethod ident = "findTop" author ="alexandre.liccardi@onema.fr" update ="Mon Jul 25 00:00:00 CEST 2016" description = "Récupération des numéros de lignes des enregistrements, correspondant à une condition d’ordre sur une statistique, réutilisant la liste des statistiques à implémenter définies en Tableau 2, citées comme # ordonnées # (O). Ordre : TOP.">
<Invokation>
<Parameter ident = "colGroup" type = "String" description = "Nom de la colonne de groupement" />
<Parameter ident = "colName" type = "String" description = "Nom de la colonne de calcul" />
<Parameter ident = "conditionList" type = "Map&lt;Integer, Map&lt;String,Object&gt;&gt;" description = "Liste des conditions" />
<Parameter ident = "statKey" type = "String" description = "Nom de la statistique" />
<Parameter ident = "statParam" type = "Integer" default = "null" description = "Paramètre associé à la statistique" />
<Parameter ident = "nbTop" type = "Integer" description = "Nombre de valeurs du # top #" />
</Invokation>
<Step ident = "1" weight = "20" description = "Parse du fichier (+)"/>
<Step ident = "2" weight = "100" description = "Vérification de la condition (+++)"/>
<Step ident = "3" weight = "100" description = "Calcul de la statistique (+++)"/>
<Step ident = "4" weight = "100" description = "Conditionsur statistique (+++)"/>
<Step ident = "5" weight = "20" description = "Construction du retour (+)"/>
<Step ident = "6" weight = "10" description = "Contrôle des flux"/>
<Return><Parameter ident = "findTop_ret" type = "Integer[]" description = "Liste des lignes repérées (Integer[])"/></Return>
</WildMethod>
<WildMethod ident = "findBottom" author ="alexandre.liccardi@onema.fr" update ="Mon Jul 25 00:00:00 CEST 2016" description = "Récupération des numéros de lignes des enregistrements, correspondant à une condition d’ordre sur une statistique, réutilisant la liste des statistiques à implémenter définies en Tableau 2, citées comme # ordonnées # (O). Ordre : BOTTOM">
<Invokation>
<Parameter ident = "colGroup" type = "String" description = "Nom de la colonne de groupement" />
<Parameter ident = "colName" type = "String" description = "Nom de la colonne de calcul" />
<Parameter ident = "conditionList" type = "Map&lt;Integer, Map&lt;String,Object&gt;&gt;" description = "Liste des conditions" />
<Parameter ident = "statKey" type = "String" description = "Nom de la statistique" />
<Parameter ident = "statParam" type = "Integer" default = "null" description = "Paramètre associé à la statistique" />
<Parameter ident = "nbBottom" type = "Integer" description = "Nombre de valeurs du # bottom #" />
</Invokation>
<Step ident = "1" weight = "20" description = "Parse du fichier (+)"/>
<Step ident = "2" weight = "100" description = "Vérification de la condition (+++)"/>
<Step ident = "3" weight = "100" description = "Calcul de la statistique (+++)"/>
<Step ident = "4" weight = "100" description = "Conditionsur statistique (+++)"/>
<Step ident = "5" weight = "20" description = "Construction du retour (+)"/>
<Step ident = "6" weight = "10" description = "Contrôle des flux"/>
<Return><Parameter ident = "findBottom _ret" type = "Integer[]" description = "Liste des lignes repérées (Integer[])"/></Return>
</WildMethod>
<WildMethod ident = "findTopPercent" author ="alexandre.liccardi@onema.fr" update ="Mon Jul 25 00:00:00 CEST 2016" description = "Récupération des numéros de lignes des enregistrements, correspondant au percentile sur une statistique, réutilisant la liste des statistiques à implémenter définies en Tableau 2, citées comme # ordonnées # (O). Ordre : TOP.">
<Invokation>
<Parameter ident = "colGroup" type = "String" description = "Nom de la colonne de groupement" />
<Parameter ident = "colName" type = "String" description = "Nom de la colonne de calcul" />
<Parameter ident = "conditionList" type = "Map&lt;Integer, Map&lt;String,Object&gt;&gt;" description = "Liste des conditions" />
<Parameter ident = "statKey" type = "String" description = "Nom de la statistique" />
<Parameter ident = "statParam" type = "Integer" default = "null" description = "Paramètre associé à la statistique" />
<Parameter ident = "nbTop" type = "Integer" description = "Percentile du # top #" />
</Invokation>
<Step ident = "1" weight = "20" description = "Parse du fichier (+)"/>
<Step ident = "2" weight = "100" description = "Vérification de la condition (+++)"/>
<Step ident = "3" weight = "100" description = "Calcul de la statistique (+++)"/>
<Step ident = "4" weight = "100" description = "Conditionsur statistique (+++)"/>
<Step ident = "5" weight = "20" description = "Construction du retour (+)"/>
<Step ident = "6" weight = "10" description = "Contrôle des flux"/>
<Return><Parameter ident = "findTopPercent _ret" type = "Integer[]" description = "Liste des lignes repérées (Integer[])"/></Return>
</WildMethod>
<WildMethod ident = "findBottomPercent" author ="alexandre.liccardi@onema.fr" update ="Mon Jul 25 00:00:00 CEST 2016" description = "Récupération des numéros de lignes des enregistrements, correspondant au percentile sur une statistique, réutilisant la liste des statistiques à implémenter définies en Tableau 2, citées comme # ordonnées # (O). Ordre : BOTTOM.">
<Invokation>
<Parameter ident = "colGroup" type = "String" description = "Nom de la colonne de groupement" />
<Parameter ident = "colName" type = "String" description = "Nom de la colonne de calcul" />
<Parameter ident = "conditionList" type = "Map&lt;Integer, Map&lt;String,Object&gt;&gt;" description = "Liste des conditions" />
<Parameter ident = "statKey" type = "String" description = "Nom de la statistique" />
<Parameter ident = "statParam" type = "Integer" default = "null" description = "Paramètre associé à la statistique" />
<Parameter ident = "nbBottom" type = "Integer" description = "Percentile du # bottom #" />
</Invokation>
<Step ident = "1" weight = "20" description = "Parse du fichier (+)"/>
<Step ident = "2" weight = "100" description = "Vérification de la condition (+++)"/>
<Step ident = "3" weight = "100" description = "Calcul de la statistique (+++)"/>
<Step ident = "4" weight = "100" description = "Conditionsur statistique (+++)"/>
<Step ident = "5" weight = "20" description = "Construction du retour (+)"/>
<Step ident = "6" weight = "10" description = "Contrôle des flux"/>
<Return><Parameter ident = "findBottomPercent _ret" type = "Integer[]" description = "Liste des lignes repérées (Integer[])"/></Return>
</WildMethod>
<WildMethod ident = "findStatCompare " author ="alexandre.liccardi@onema.fr" update ="Mon Jul 25 00:00:00 CEST 2016" description = "Récupération des numéros de lignes des enregistrements, correspondant à une condition mathématique sur une statistique, réutilisant la liste des statistiques à implémenter définies en Tableau 2, citées comme # comparables # (C). Les opérateurs utilisée sont supériorité / infériorité (option inclusion / exclusion) et égalité.">
<Invokation>
<Parameter ident = "colGroup" type = "String" description = "Nom de la colonne de groupement" />
<Parameter ident = "colName" type = "String" description = "Nom de la colonne de calcul" />
<Parameter ident = "conditionList" type = "Map&lt;Integer, Map&lt;String,Object&gt;&gt;" description = "Conditions de recherche sur la colonne avant calcul de la statistique" />
<Parameter ident = "statKey" type = "String" description = "Nom de la statistique" />
<Parameter ident = "statParam" type = "Integer" default = "null" description = "Paramètre de la statistique" />
<Parameter ident = "minValue" type = "Object" description = "Valeur inférieure" />
<Parameter ident = "minExclude" type = "Boolean" default = "false" description = "Est exclu par le bas ?" />
<Parameter ident = "maxValue" type = "Object" description = "Valeur supérieure" />
<Parameter ident = "maxExclude" type = "Boolean" default = "false" description = "Est exclu par le haut ?" />
</Invokation>
<Step ident = "1" weight = "20" description = "Parse du fichier (+)"/>
<Step ident = "2" weight = "100" description = "Vérification de la condition (+++)"/>
<Step ident = "3" weight = "100" description = "Calcul de la statistique (+++)"/>
<Step ident = "4" weight = "100" description = "Conditionsur statistique (+++)"/>
<Step ident = "5" weight = "20" description = "Construction du retour (+)"/>
<Step ident = "6" weight = "10" description = "Contrôle des flux"/>
<Return><Parameter ident = "findStatCompare _ret" type = "Integer[]" description = "Liste des lignes repérées (Integer[])"/></Return>
</WildMethod>
<WildMethod ident = "findRecords" author ="alexandre.liccardi@onema.fr" update ="Mon Jul 25 00:00:00 CEST 2016" description = "Récupération des enregistrements sous forme de WildDataSet (Map JAVA), pour l’ensemble des conditions opérables sur le fichier.">
<Invokation>
<Parameter ident = "conditionList" type = "Map&lt;Integer, Map&lt;String,Object&gt;&gt;" description = "Conditions de recherche" />
</Invokation>
<Step ident = "1" weight = "20" description = "Parse du fichier (+)"/>
<Step ident = "2" weight = "100" description = "Vérification de la condition (+++)"/>
<Step ident = "3" weight = "20" description = "Construction du retour (+)"/>
<Step ident = "4" weight = "10" description = "Contrôle des flux"/>
<Return><Parameter ident = "findRecords_ret" type = "Map&lt;Integer,Map&lt;String,Object&gt;&gt;" description = "Liste des enregistrements(Map&lt;Integer,Map&lt;String,Object&gt;&gt;)"/></Return>
</WildMethod>
<WildMethod ident = "saveRecords" author ="alexandre.liccardi@onema.fr" update ="Mon Jul 25 00:00:00 CEST 2016" description = "Récupération des enregistrements sous forme de fichier CSV, pour l’ensemble des conditions opérables sur le fichier.">
<Invokation>
<Parameter ident = "conditionList" type = "Map&lt;Integer, Map&lt;String,Object&gt;&gt;" description = "Conditions de recherche" />
</Invokation>
<Step ident = "1" weight = "20" description = "Parse du fichier (+)"/>
<Step ident = "2" weight = "100" description = "Vérification de la condition (+++)"/>
<Step ident = "3" weight = "20" description = "Construction du retour (+)"/>
<Step ident = "4" weight = "10" description = "Contrôle des flux"/>
<Return><Parameter ident = "saveRecords_ret" type = "String" description = "Adresse du fichier écrit (String)"/></Return>
</WildMethod>
</WildObject>